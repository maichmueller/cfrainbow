name: Python CI

on:
  pull_request:
    branches: '**'
  push:
    branches: '**'

jobs:
  lint:
    runs-on: 'ubuntu-latest'
    name: Pre-Commit Checks
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Update pip
        run: |
          python -m pip install --upgrade pip
      - name: Install and run pre-commit
        uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files

  test:
    needs:
      - lint
    strategy:
      fail-fast: true
      matrix:
        config:
          - python-version: 3.8
            tox: py38
          - python-version: 3.9
            tox: py39
          - python-version: '3.10'
            tox: py310
        os: [ 'macos-latest', 'ubuntu-20.04', 'ubuntu-22.04' ]
    runs-on: ${{ matrix.os }}
    name: Py ${{ matrix.config.python-version }} tests (${{ matrix.os }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.config.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.config.python-version }}

      - name: Update pip
        run: |
          python -m pip install --upgrade pip

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-path: .venv
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: false

      - name: Load cached virtual env
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ matrix.os }}-python-${{ matrix.config.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Load cached tox
        id: cached-tox-dependencies
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.os }}-python-${{ matrix.config.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.14
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        with:
          cmake-version: '3.25'
#
#      - name: Install Clang
#        if: matrix.os == 'macos-latest' && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#        run: |
#          brew update
#          brew install llvm
#
#      - name: Setup Clang via Marketplace
#        if: matrix.os != 'macos-latest' && steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#        uses: egor-tensin/setup-clang@v1
#        with:
#          version: '15'

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        env:
          PATH: "$HOME/.poetry/bin:$PATH"
          CC: clang
          CXX: clang++
        run: poetry install --with dev

      - name: Run tox with coverage
        run: |
          poetry run tox -e ${{ matrix.config.tox }} -- -- -n auto --cov=cfrainbow
        env:
          PATH: "$HOME/.poetry/bin:$PATH"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          env_vars: OS,PY
